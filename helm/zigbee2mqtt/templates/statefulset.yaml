apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zigbee2mqtt.fullname" . }}
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    {{- include "zigbee2mqtt.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "zigbee2mqtt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "zigbee2mqtt.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: prepare-secrets
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          image: {{ include "zigbee2mqtt.image" . }}
          command:
          - sh
          - -c
          - |
            set -e
            if [ -f /app/data/configuration.yaml ]; then
              export USB_DEVICES_URL=$(echo $USB_DEVICES_URL | sed 's/\//\\\//g')
              export MQTT_SERVER=$(echo {{ .Values.config.mqtt.server }} | sed 's/\//\\\//g')
              sed -i \
                -e "/^mqtt:/,/server:/{/^\([[:space:]]*server: \).*/s//\1${MQTT_SERVER}/}" \
                -e "/^mqtt:/,/user:/{/^\([[:space:]]*user: \).*/s//\1${MQTT_USERNAME}/}" \
                -e "/^mqtt:/,/password:/{/^\([[:space:]]*password: \).*/s//\1${MQTT_PASSWORD}/}" \
                -e "/^serial:/,/port:/{/^\([[:space:]]*port: \).*/s//\1${USB_DEVICES_URL}/}" \
                -e "/^serial:/,/adapter:/{/^\([[:space:]]*adapter: \).*/s//\1{{ .Values.config.serial.adapter }}/}" \
                /app/data/configuration.yaml
            else
              cat <<EOF > /app/data/configuration.yaml
            # Home Assistant integration (MQTT discovery)
            homeassistant: true
            frontend: true

            # allow new devices to join
            permit_join: false

            # MQTT settings
            mqtt:
              # MQTT base topic for zigbee2mqtt MQTT messages
              base_topic: zigbee2mqtt
              # MQTT server URL
              server: '{{ .Values.config.mqtt.server }}'
              # MQTT server authentication, uncomment if required:
              user: ${MQTT_USERNAME}
              password: ${MQTT_PASSWORD}

            # Serial settings
            serial:
              # Using ser2net 
              port: ${USB_DEVICES_URL}
              adapter: {{ .Values.config.serial.adapter }}
            EOF
            fi
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "64Mi"
          envFrom:
            - secretRef:
                name: {{ include "zigbee2mqtt.fullname" . }}
          volumeMounts:
            - name: data
              mountPath: /app/data
      containers:
        - name: zigbee2mqtt
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          image: {{ include "zigbee2mqtt.image" . }}
          resources:
            requests:
              memory: "200Mi"
              cpu: "20m"
            limits:
              memory: "200Mi"
          volumeMounts:
            - name: data
              mountPath: /app/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "zigbee2mqtt.fullname" . }}
      securityContext:
        fsGroup: 1000
